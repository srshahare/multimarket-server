import Head from 'next/head'
import { Inter } from 'next/font/google'
import { useRouter } from 'next/router'
import { useEffect, useState } from 'react'
import AgentSite from './AgentSite'
import OfficeSite from './OfficeSite'
import EComSite from './EComSite'
import CustomerSite from './CustomerSite'
import axios from 'axios'
import baseUrl from '@/utils/baseUrl'
import NotFound from './notfound'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {

  const { asPath } = useRouter();
  const router = useRouter();
  const [site, setSite] = useState("")

  useEffect(() => {
    const origin =
      typeof window !== 'undefined' && window.location.origin
        ? window.location.origin
        : '';

    const URL = `${origin}${asPath}`;
    if (URL === "https://ztroo.com/" || URL === "https://www.ztroo.com/") {
      setSite("agent")
    } else {
      const firstURL = URL.split(".ztroo.com")
      console.log(firstURL)
      if (firstURL.length > 1) {
        const refUrl = firstURL[0]
        const secondURL = refUrl.split("-")
        const mySite: any = secondURL.pop();
        setSite(mySite)
      } else {
        //* Change this for dev
        setSite("not")
      }
    }
  }, [])


  const [auth, setAuth] = useState(false)
  const [user, setUser] = useState(null)
  const [memberAuth, setMemberAuth] = useState(false)
  const [member, setMember] = useState(null)
  const [isLogin, setLogin] = useState(true)

  useEffect(() => {

    async function validateToken() {
      try {

        const token = localStorage.getItem("token")
        if (!token) {
          return setAuth(false)
        }

        const result = await axios({
          method: "post",
          url: baseUrl + "/auth/validate",
          headers: { Authorization: `Bearer ${token}` }
        })

        if (result.data?.user) {
          setAuth(true)
          setUser(result.data?.user)
          console.log(result)
        }
      } catch (err) {
        console.log(err)
      }
    }
    async function validateMemberToken() {
      try {

        const token = localStorage.getItem("mtoken")
        if (!token) {
          return setMemberAuth(false)
        }

        const result = await axios({
          method: "post",
          url: baseUrl + "/auth/member/validate",
          headers: { Authorization: `Bearer ${token}` }
        })

        if (result.data?.member) {
          setMemberAuth(true)
          setMember(result.data?.member)
          console.log(result)
        }
      } catch (err) {
        console.log(err)
      }
    }

    if (!auth) {
      validateToken()
    }

    if (!memberAuth) {
      validateMemberToken();
    }

  }, [auth, memberAuth])

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        {site === 'agent' &&
          <AgentSite isLogin={isLogin} setLogin={setLogin} auth={auth} setAuth={setAuth} user={user} />
        }
        {
          site === 'office' &&
          <OfficeSite auth={auth} setAuth={setAuth} user={user} />
        }
        {
          site === "ecom" &&
          <EComSite isLogin={isLogin} setLogin={setLogin} auth={memberAuth} setMemberAuth={setMemberAuth} member={member} />
        }
        {
          site === "customer" &&
          <CustomerSite auth={memberAuth} setMemberAuth={setMemberAuth} member={member} />
        }
        {
          site === 'not' &&
          <NotFound />
        }
        {/* <div className={styles.content}>
          <div onClick={() => router.push("/backOffice/login")} className={styles.div} style={{background: "rgb(69, 108, 180)"}} >
            <h3>Back Office</h3>
          </div>
          <div onClick={() => router.push("/agentSite/login")} className={styles.div} style={{background: "rgb(255, 150, 63)"}} >
            <h3>Agent Site</h3>
          </div>
          <div onClick={() => router.push("/eCommerce/login")} className={styles.div} style={{background: "rgb(111, 204, 103)"}} >
            <h3>E-Commerce</h3>
          </div>
          <div onClick={() => router.push("/customerService/login")} className={styles.div} style={{background: "rgb(255, 210, 63)"}} >
            <h3>Customer Service System</h3>
          </div>
        </div> */}
      </main>
    </>
  )
}
